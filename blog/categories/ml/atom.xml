<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ml | GIS行迹]]></title>
  <link href="http://hengcai.github.io/blog/categories/ml/atom.xml" rel="self"/>
  <link href="http://hengcai.github.io/"/>
  <updated>2014-11-06T17:24:51+08:00</updated>
  <id>http://hengcai.github.io/</id>
  <author>
    <name><![CDATA[hengcai]]></name>
    <email><![CDATA[hengcai007@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ScaLAPACK使用说明]]></title>
    <link href="http://hengcai.github.io/blog/2014/10/29/math-scalapack/"/>
    <updated>2014-10-29T15:10:17+08:00</updated>
    <id>http://hengcai.github.io/blog/2014/10/29/math-scalapack</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matlab 基础数据知识]]></title>
    <link href="http://hengcai.github.io/blog/2014/10/08/matlab-basic/"/>
    <updated>2014-10-08T23:28:11+08:00</updated>
    <id>http://hengcai.github.io/blog/2014/10/08/matlab-basic</id>
    <content type="html"><![CDATA[<h3>1. Matlab历史</h3>

<p>MATLAB(<strong>MAT</strong>rix <strong>LAB</strong>oratory)</p>

<p>主要用途
- 数值与符号计算
- 绘图
- 语言体系
- 工具箱 （功能，学科）</p>

<p>Matlab路径设置</p>

<p>主要搜索过程</p>

<p>函数<code>path</code> ;<code>help</code>; <code>userpath</code>  ;<code>pathtools</code>; <code>savepath;</code></p>

<blockquote><ol>
<li>是否为变量</li>
<li>是否为函数</li>
<li>当前目录</li>
<li>搜索路径下的目录</li>
</ol>
</blockquote>

<hr />

<h3>2. Matlab基础的数据结构</h3>

<blockquote><ol>
<li>双精度类型 <code>double</code> ： 如[1, 2]。这是Matlab绝大部分进行操作的主要数据类型</li>
<li>字符型 <code>char</code>  字符串操作也是数据最基础的数据类型 跟R相似,<code>double('a')</code>  <code>str2double(a)</code>,注意字符型与Ascii的相互转化过程，如果要执行Matlab的字符型语句，需要使用<code>eval</code></li>
<li>稀疏矩阵<code>sparse</code> 这是R中所没有的，主要用于存储稀疏举证中的非0元素</li>
<li>细胞性 <code>cell</code> 类似于R中 <code>list</code> 可以存储不同类型的，不同维度的数据</li>
<li>结构性 <code>struct</code> 类似于R中 <code>data.frame</code>，可以存储不同列的数据,<code>isstruct</code> <code>fieldnames(s)</code></li>
<li>存储型<code>storage</code> 这是R中所没有的。主要用来存储大的二进制文件，如图像，<code>uint8</code> 类型</li>
<li>以上的基本的数据类型都可以组成数组的形式，可以是一维、二维、或者多维，</li>
</ol>
</blockquote>

<hr />

<h3>3. Matlab基础的数据操作</h3>

<p>由于数组是Matlab基础的数据结构，所以操作数组的相关操作就是关键，如创建数组、访问数组</p>

<p>R与Matab基本的组成结构都是：变量+函数，这也是区别于其他编程语言最为主要的地方，这样可以让数据<strong>数据科学家</strong>将更多的经历专注于数据分析工作</p>

<blockquote><p>牢记R、Matlab的核心数据结构及基本操作,以及循环控制语句，剩下的大部分工作就是数学问题</p></blockquote>

<p>Matlab的基本操作：</p>

<ul>
<li>变量命名，变量不需要预先定义，</li>
<li>语句，有无分号决定是否输出执行结果，</li>
<li>注释采用%符号</li>
<li>赋值 变量=表达式</li>
</ul>


<p>Matlab几个比较常用的函数：
<code>who var</code>  <code>clear</code> <code>clc</code>  <code>save</code> <code>eval()</code></p>

<p>Matlab格式化输出： format格式</p>

<hr />

<h4>一维数组的基本操作</h4>

<p>Matlab中的一维数组类似于R中的向量</p>

<blockquote><ul>
<li>创建数组<code>a =[1,2,3]</code>，类似于R中的向量<code>c(1,2,3)</code>，</li>
<li>冒号定义 <code>startv : step : endv</code></li>
<li>线性分割 <code>linspace(a,b,n)</code></li>
<li>对数分割 <code>logspace(a,b,n)</code></li>
<li>数组的访问</li>
<li>访问是采用的括号<code>()</code> 而R中访问采用的是<code>[]</code> 这个是与R中相反的，<code>x([1,5])</code>表示取第一个与第5个，<code>x(1:3)</code>表示取数组中的1,2,3个，相反在R中取采用<code>r[c(1,5)]</code> 与<code>r[1:3]</code></li>
</ul>
</blockquote>

<h5>矩阵基本操作</h5>

<blockquote><ul>
<li>使用行标、列标或者表中索引的位置来进行索引</li>
<li>矩阵是按照列进行存储的，所以<code>sub2ind</code>  <code>ind2sub</code>函数可以显示所在的列号码</li>
<li>重排矩阵<code>reshape</code>函数</li>
<li>矩阵转置  <code>a=a'</code></li>
<li>矩阵拆分 <code>a=a(:,2)</code>  <code>a(end-1,1)</code></li>
<li>删除矩阵元素  <code>a(x,y) = []</code></li>
<li>扩展矩阵  <code>repmat (a, 2,1)</code></li>
<li>矩阵压缩,矩阵去重  <code>unique(E)</code></li>
</ul>
</blockquote>

<h4>二维数组的基本操作</h4>

<p>MatLab中的二维数组类似于R中的矩阵</p>

<blockquote><ul>
<li>创建二维数组 <code>x=[1,2,3; 4,5,6]</code></li>
<li>在R中创建数组是利用Vector进行填充的</li>
<li>MatLab中经常利用M文件来保存</li>
</ul>
</blockquote>

<h4>高维数组的基本操作</h4>

<p>Matlab中高维数组类似于R中数组，只不过R中的数组可以是1维，2维，多维，这里R中的多维数组类似于Matlab的高维数组</p>

<hr />

<h3>4. Matlab控制语句</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R基础知识]]></title>
    <link href="http://hengcai.github.io/blog/2014/09/26/r-basic-information/"/>
    <updated>2014-09-26T09:26:15+08:00</updated>
    <id>http://hengcai.github.io/blog/2014/09/26/r-basic-information</id>
    <content type="html"><![CDATA[<h3>简介</h3>

<p>数据分析的基本流程</p>

<blockquote><ol>
<li>安装 R与RStudio</li>
<li>Windows Linux OSX  <a href="http://www.r-project.org/">R HOME</a></li>
<li><a href="http://www.rstudio.com/">RStudio</a> 非常不错的IDE工具，推荐。</li>
<li>包的管理</li>
<li>安装 <code>install.packages("name")</code></li>
<li>常用命令</li>
<li>帮助 <code>help.start() help("foo")</code></li>
<li>工作空间 <code>getwd() ls() rm() history() save.image("xx")</code></li>
<li>输入输出  <code>source("xxx.R")  sink("xxx")</code></li>
</ol>
</blockquote>

<h3>R基础数据结构</h3>

<blockquote><ol>
<li><strong>向量</strong></li>
<li>只能包含相同类型的或模式（如数值型、字符型及逻辑型） <strong>示例</strong> ： <code>a&lt;-c(1,2,3,4)</code></li>
<li>向量取值 <code>a[1:2] a[c(1,3,5)]   a[-1]  a[a&gt;1]</code></li>
<li><p>向量比较 <code>c(1,2) &gt; c(2,3)</code></p></li>
<li><p>矩阵</p></li>
<li>数据框可以包含不同的类型，</li>
<li>矩阵就代表是二维数组</li>
<li><p>定义 <code>a&lt;-matrix(vector,nrow=5,ncol=4)</code>, 矩阵的取值方式是`a[行，列]</p></li>
<li><p>数组</p></li>
<li>array的维度可以大于2 主要包含 <code>array(vector, dimensions, dimnnames,)</code>  <strong>示例</strong>:<code>array(1:8, c(2,3))</code> 表示2行2列</li>
<li><p>数组的取值 <code>a[1,1]</code></p></li>
<li><p>数据框</p></li>
<li>数据框的优势在于可以填充不同的类型值， 类似于Excel表格，或者SpSS表格，数据库是非常适合数据分析的，每一行代表一个样本，每一列代表一个变量或属性</li>
<li><p>示例，<code>data.frame(col1,col2,col3)</code></p></li>
<li><p>列表</p></li>
<li>列表可是是以上类型的组合 <code>mylist &lt;-list(age=age,city=city,sex=sex)</code></li>
</ol>
</blockquote>

<p><strong>附注</strong></p>

<ul>
<li>R是一种基于对象的语言，R中的每样东西都是对象，最基本的类是数值、字符、逻辑；复合类包含矩阵、数组数据框、列表</li>
<li><code>Class(object) attributes(object)</code></li>
</ul>


<h3>R数据基本操作</h3>

<blockquote><ol>
<li>键盘输入</li>
<li>控制台输入<code>x &lt;- readline()</code></li>
<li>输入<code>x&lt;-scan()</code></li>
<li>文本输出 <code>output &lt;-file('output.txt')  cat(1:100,sep="\t",file=output) close(output)</code></li>
<li><p>文本输入<code>input &lt;- scan(file('output.txt'))</code></p></li>
<li><p>表格数据</p></li>
<li>读写文件 <code>read.table()</code></li>
<li><p>写文件 <code>write.table()</code></p></li>
<li><p>EXCEL数据</p></li>
<li>需要RODBC数据库包</li>
<li><p><code>odbcConnectExcel</code></p></li>
<li><p>Database数据</p></li>
<li>数据库 需要安装包 <code>library(RODBC)</code></li>
<li><p>读写数据库 <code>channel &lt;- odbcConnect("mysql",uid=root,pwd=pproot)</code></p></li>
<li><p>网络文本数据源</p></li>
<li>结构化数据抓取  <a href="www.google.com/adplanner/static/top1000">top1000</a></li>
<li>数据抓取的工作<code>tables &lt;- readHTMLTable(url,stringAsFactors=FALSE, header=F)</code></li>
</ol>
</blockquote>

<h3>R的基本图形绘制</h3>

<blockquote><ol>
<li>基本图形</li>
<li><p>基本的绘图包<code>graphics  lattice  ggplot2</code></p>

<ul>
<li>ggplot2 包的绘制 <code>p &lt;- ggplot(data=mpg,mapping=aes(x=cty,y=hwy,colour=factor(year))) + stat_smooth()</code></li>
<li>lattic 包的绘制 <code>stripplot(Sepal.Length | Species,data=iris,layout=c(1,3))</code></li>
<li>graphics 属于最基础的包的图形绘制</li>
</ul>
</li>
<li><p>符号线条</p></li>
<li><p>文本</p></li>
<li><p>尺寸</p></li>
</ol>
</blockquote>

<h3>R基本数据操作</h3>

<blockquote><ol>
<li>plyr包使用</li>
<li><code>ddply() adply()</code></li>
<li>基本的数据分析工具使用</li>
</ol>
</blockquote>

<hr />

<h3>R常用包</h3>

<p>统计包的数量命令</p>

<blockquote><ul>
<li>pkgs &lt;- sort(.packages(all.available = TRUE))</li>
<li>length(pkgs)</li>
<li>pkgs</li>
</ul>
</blockquote>

<p>1、聚类</p>

<blockquote><ul>
<li>常用的包： fpc，cluster，pvclust，mclust</li>
<li>基于划分的方法: kmeans, pam, pamk, clara</li>
<li>基于层次的方法: hclust, pvclust, agnes, diana</li>
<li>基于模型的方法: mclust</li>
<li>基于密度的方法: dbscan</li>
<li>基于画图的方法: plotcluster, plot.hclust</li>
<li>基于验证的方法: cluster.stats</li>
</ul>
</blockquote>

<p>2、分类</p>

<blockquote><ul>
<li>常用的包：rpart，party，randomForest，rpartOrdinal，tree，marginTree，maptree，survival</li>
<li>决策树: rpart, ctree</li>
<li>随机森林: cforest, randomForest</li>
<li>回归 Logistic回归, Poisson回归: glm, predict, residuals</li>
<li>生存分析: survfit, survdiff, coxph</li>
</ul>
</blockquote>

<p>3、关联规则与频繁项集
常用的包：</p>

<blockquote><ul>
<li>arules：支持挖掘频繁项集，最大频繁项集，频繁闭项目集和关联规则</li>
<li>DRM：回归和分类数据的重复关联模型</li>
<li>APRIORI算法，广度RST算法：apriori, drm</li>
<li>ECLAT算法： 采用等价类，RST深度搜索和集合的交集： eclat</li>
</ul>
</blockquote>

<p>4、序列模式</p>

<blockquote><ul>
<li>常用的包： arulesSequences</li>
<li>SPADE算法： cSPADE</li>
</ul>
</blockquote>

<p>5、时间序列</p>

<blockquote><ul>
<li>常用的包： timsac</li>
<li>时间序列构建函数： ts</li>
<li>成分分解: decomp, decompose, stl, tsr
6、统计</li>
<li>常用的包： Base R, nlme</li>
<li>方差分析: aov, anova</li>
<li>密度分析: density</li>
<li>假设检验: t.test, prop.test, anova, aov</li>
<li>线性混合模型：lme</li>
<li>主成分分析和因子分析：princomp</li>
<li>方差分析对应的是Kruskal-Wallis秩和检验（R: kruskal.test)</li>
<li>T检验对应的是Wilcoxon符号秩和检验（R: wilcox.test)</li>
</ul>
</blockquote>

<p>7、图表</p>

<blockquote><ul>
<li>条形图: barplot</li>
<li>饼图: pie</li>
<li>散点图: dotchart</li>
<li>直方图: hist</li>
<li>密度图: densityplot</li>
<li>蜡烛图, 箱形图 boxplot</li>
<li>QQ (quantile-quantile) 图: qqnorm, qqplot, qqline</li>
<li>Bi-variate plot: coplot</li>
<li>树: rpart</li>
<li>Parallel coordinates: parallel, paracoor, parcoord</li>
<li>热图, contour: contour, filled.contour</li>
<li>其他图: stripplot, sunflowerplot, interaction.plot, matplot, fourfoldplot,assocplot, mosaicplot</li>
<li>保存的图表格式: pdf, postscript, win.metafile, jpeg, bmp, png</li>
</ul>
</blockquote>

<p>8、数据操作</p>

<blockquote><ul>
<li>缺失值：na.omit</li>
<li>变量标准化：scale</li>
<li>变量转置：t</li>
<li>抽样：sample</li>
<li>堆栈：stack, unstack</li>
<li>其他：aggregate, merge, reshape</li>
</ul>
</blockquote>

<p>9、与数据挖掘软件Weka做接口</p>

<blockquote><ul>
<li>RWeka: 通过这个接口，可以在R中使用Weka的所有算法</li>
</ul>
</blockquote>

<p>10、人工神经网络： nnet
11、支持向量机SVM：e1071</p>

<p>12、核函数：kernlab</p>

<p>13、随机森林randomforest：randomForest</p>

<p>14、制作分位箱图：Hmisc</p>

<p>15、绘制图形：qplot，ggplot2，</p>
]]></content>
  </entry>
  
</feed>
